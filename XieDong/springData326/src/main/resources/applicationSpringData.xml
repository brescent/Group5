<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jpa="http://www.springframework.org/schema/c"

       xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
                   "
       default-lazy-init="true">

<!--    扫描包-->
    <context:component-scan base-package="com.jpa"></context:component-scan>
<!--加载文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
<!--    获取配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">

        <property name="url" value="${jdbc_url}"></property>
        <property name="username" value="${jdbc_user}"></property>
        <property name="password" value="${jdbc_password}"></property>
        <property name="driverClassName" value="${jdbc_driver}"></property>
    </bean>

<!--    配置JPA工厂-->

    <bean id="managerFactoryBean"  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

<!--        数据源  将数据源放入springdata-->
        <property name="dataSource" ref="dataSource"></property>
<!--     JPA适配器-->
        <property name="jpaVendorAdapter" >
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>

        </property>

<!--        管理实体 扫描实体包-->
        <property name="packagesToScan" value="com.jpa.entity"></property>

<!--        配置hibernate 的配置-->
        <property name="jpaProperties">
            <props>
              <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">${format_sql}</prop>
            </props>
        </property>
    </bean>

<!--    适配器管理-->
<bean id="vendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
<!--    hibernate的方言-->
    <property name="databasePlatform" value="${hibernate.dialect}"></property>
</bean>

<!--    把springdataJPA工厂交给spring 并把接口也交给spring-->
    <jpa:repositories base-package="com.jpa.dao" entity-manager-factory-ref="managerFactoryBean" transaction-manager-ref="jpaTransactionManager"></jpa:repositories>

<!--    事务管理器-->
   <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
       <property name="entityManagerFactory" ref="managerFactoryBean"></property>
   </bean>

<!--    通知 -->
<!--    注解事务-->
<tx:annotation-driven transaction-manager="jpaTransactionManager" proxy-target-class="true"></tx:annotation-driven>
</beans>
